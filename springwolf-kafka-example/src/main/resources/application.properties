import pytest
import pandas as pd
from itau_mr7_drp_lotus_internals import apply_transformation, gh_calculation

@pytest.fixture
def sample_df():
    return pd.DataFrame({'score': [0.2, 0.5, 1.5, 2.5, 3.5, 4.5]})

def test_apply_transformation_gh_calculation(sample_df):
    # Pontos de corte para o cálculo GH
    cut_points = [0, 1, 2, 3, 4, 5]

    # DataFrame esperado após a aplicação do cálculo GH
    expected_df = sample_df.copy()
    expected_df['score'] = pd.cut(expected_df['score'], bins=cut_points, labels=range(1, len(cut_points)))

    # Aplica a transformação GH e valida o resultado
    transformed_df = apply_transformation(
        sample_df, 
        score_column='score', 
        transformation_function=gh_calculation, 
        cut_points=cut_points
    )

    pd.testing.assert_frame_equal(transformed_df, expected_df)

def test_apply_transformation_no_function(sample_df):
    # Verifica se a função lança um erro quando não há função de transformação
    with pytest.raises(ValueError, match="Nenhuma função de transformação foi fornecida"):
        apply_transformation(sample_df, 'score')
