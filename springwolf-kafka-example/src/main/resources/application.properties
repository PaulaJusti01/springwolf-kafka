import pandas as pd
import yaml
import numpy as np
import gh_methods

def load_config(config_path):
    with open(config_path, "r") as file:
        return yaml.safe_load(file)

def get_transformation_params(calculation_type):
    if calculation_type == "GH":
        return pd.cut, {"bins": cut_points, "labels": np.arange(1, len(cut_points))}
    else:
        raise ValueError(f"Cálculo '{calculation_type}' não suportado.")

def load_inference_data(file_path):
    return pd.read_csv(file_path)

def apply_transformation(df, score_column, transformation_function, transformation_params):
    return gh_methods.apply_transformation(df, score_column, transformation_function, **transformation_params)

def save_transformed_data(df, output_path):
    df.to_csv(output_path, index=False)

def main():
    config = load_config("path/to/config.yml")
    calculation_type = config["calculo"]
    
    transformation_function, transformation_params = get_transformation_params(calculation_type)
    
    df = load_inference_data("path/to/inference_output.csv")
    df = apply_transformation(df, "score", transformation_function, transformation_params)
    
    save_transformed_data(df, "path/to/transformed_output.csv")

if __name__ == "__main__":
    main()
