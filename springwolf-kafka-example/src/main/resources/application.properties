import pandas as pd
import unittest
from calculation_methods import apply_post_inference_calculation, _gh_calculation

class TestCalculationMethods(unittest.TestCase):

    def setUp(self):
        self.df = pd.DataFrame({'score': [10, 20, 30, 40, 50]})

    def test_apply_post_inference_calculation_gh(self):
        cut_points = [0, 10, 20, 30, 40, 50]
        result = apply_post_inference_calculation(self.df.copy(), 'score', 'GH', cut_points=cut_points)
        expected_bins = pd.cut(self.df['score'], bins=cut_points, labels=[1, 2, 3, 4, 5])
        pd.testing.assert_series_equal(result['score'], expected_bins, check_names=False)

    def test_apply_post_inference_calculation_invalid_type(self):
        with self.assertRaises(ValueError) as context:
            apply_post_inference_calculation(self.df.copy(), 'score', 'invalid_type')
        self.assertEqual(str(context.exception), "Cálculo 'invalid_type' não é suportado.")

    def test_gh_calculation(self):
        cut_points = [0, 10, 20, 30, 40, 50]
        result = _gh_calculation(self.df.copy(), 'score', cut_points=cut_points)
        expected_bins = pd.cut(self.df['score'], bins=cut_points, labels=[1, 2, 3, 4, 5])
        pd.testing.assert_series_equal(result['score'], expected_bins, check_names=False)

if __name__ == '__main__':
    unittest.main()
