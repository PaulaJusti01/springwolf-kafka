import pandas as pd
import yaml
import os
import boto3
from io import StringIO
from gh_methods import apply_calculation  # Importa o método da biblioteca

def load_config(config_path):
    with open(config_path, 'r') as file:
        return yaml.safe_load(file)

def load_model_metadata(model_metadata_path):
    with open(model_metadata_path, 'r') as file:
        return yaml.safe_load(file)

def calculate_cut_points(model_metadata):
    return model_metadata['cut_points']

def read_output_in_chunks(s3_client, bucket_name, output_key, chunksize):
    paginator = s3_client.get_paginator('get_object')
    response_iterator = paginator.paginate(Bucket=bucket_name, Key=output_key)
    
    for response in response_iterator:
        body = response['Body'].read().decode('utf-8')
        for chunk in pd.read_csv(StringIO(body), chunksize=chunksize):
            yield chunk

def save_chunk_to_output(s3_client, chunk, bucket_name, output_dir, chunk_index):
    output_file_key = f'{output_dir}/output_chunk_{chunk_index}.csv'
    csv_buffer = StringIO()
    chunk.to_csv(csv_buffer, index=False)
    s3_client.put_object(Bucket=bucket_name, Key=output_file_key, Body=csv_buffer.getvalue())

def main(config_path, output_key, model_metadata_path, bucket_name, output_dir, chunksize):
    config = load_config(config_path)
    model_metadata = load_model_metadata(model_metadata_path)
    cut_points = calculate_cut_points(model_metadata)

    s3_client = boto3.client('s3')

    for chunk_index, chunk in enumerate(read_output_in_chunks(s3_client, bucket_name, output_key, chunksize)):
        scores = chunk['score']
        transformed_scores = apply_calculation(scores, cut_points)  # Aplica o método da biblioteca
        chunk['score'] = transformed_scores
        save_chunk_to_output(s3_client, chunk, bucket_name, output_dir, chunk_index)

if __name__ == "__main__":
    config_path = 'path/to/config.yml'
    output_key = 'path/to/output.csv'  # Key of the output file in the S3 bucket
    model_metadata_path = 'path/to/model_metadata.yml'
    bucket_name = 'your-bucket-name'  # Name of your S3 bucket
    output_dir = 'path/to/output_directory'  # Directory where the output files will be saved in the S3 bucket
    chunksize = 1000  # Adjust as needed

    main(config_path, output_key, model_metadata_path, bucket_name, output_dir, chunksize)
