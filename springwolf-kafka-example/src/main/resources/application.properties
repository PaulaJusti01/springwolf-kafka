import pandas as pd
import boto3
import yaml
import os
from gh_methods import apply_transformation  # Supondo que você tenha essa biblioteca

def load_model_metadata(s3_client, bucket, key):
    response = s3_client.get_object(Bucket=bucket, Key=key)
    metadata = response['Body'].read()
    return yaml.safe_load(metadata)

def load_config(s3_client, bucket, config_key):
    response = s3_client.get_object(Bucket=bucket, Key=config_key)
    config = response['Body'].read()
    return yaml.safe_load(config)

def process_data(s3_client, bucket, output_key, score_column, transformation_params):
    # Lê o arquivo CSV em chunks
    for chunk in pd.read_csv(f's3://{bucket}/{output_key}', chunksize=1000):
        # Aplicar a transformação
        chunk = apply_transformation(chunk, score_column, **transformation_params)

        # Salvar o chunk transformado em um novo diretório
        output_path = f's3://{bucket}/processed_output/{os.path.basename(output_key)}'  # Ajuste o caminho conforme necessário
        chunk.to_csv(output_path, mode='a', index=False, header=not os.path.exists(output_path))  # Append to file

def main():
    s3_client = boto3.client('s3')
    bucket_name = 'your-bucket-name'
    model_metadata_key = 'path/to/model_metadata.yml'
    config_key = 'path/to/config.yml'
    output_key = 'path/to/inference_output.csv'
    
    # Carregar metadados e configuração
    model_metadata = load_model_metadata(s3_client, bucket_name, model_metadata_key)
    config = load_config(s3_client, bucket_name, config_key)
    
    # Obter o tipo de cálculo a partir da configuração
    calculation = config['calculation']
    score_column = 'score'  # Nome da coluna de score
    transformation_params = {}  # Parâmetros para a transformação

    if calculation == "GH":
        transformation_params['cut_points'] = [0, 50, 100]  # Exemplo de pontos de corte para o cálculo GH

    # Processar os dados
    process_data(s3_client, bucket_name, output_key, score_column, transformation_params)

if __name__ == "__main__":
    main()
