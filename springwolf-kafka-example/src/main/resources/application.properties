from __future__ import annotations
import boto3
from datetime import datetime

sagemaker_client = boto3.client("sagemaker")
securityhub_client = boto3.client('securityhub', region_name='us-east-1')  # ajuste a região conforme necessário

def lambda_handler(event, context):
    print(event)

    # Extrai o ARN do domínio
    domain_arn = event['detail']['responseElements']['domainArn']
    domain_id = domain_arn.split('/')[-1]

    # Obtém as tags do domínio
    tags = sagemaker_client.list_tags(ResourceArn=domain_arn).get('Tags', [])

    # Verifica se a tag SagemakerException existe
    if any(tag['Key'] == 'SagemakerException' for tag in tags):
        print(f"Domain {domain_id} possui a tag SagemakerException. Nenhuma ação será realizada.")
        return

    # Obtém os detalhes do domínio para verificar o VPC
    domain_details = sagemaker_client.describe_domain(DomainId=domain_id)
    vpc_id = domain_details.get("VpcId")

    # Invertendo a lógica para teste: se houver VPC, registra o finding
    if vpc_id:
        print(f"Domain {domain_id} tem o VPC {vpc_id} associado. Registrando finding no Security Hub para teste...")

        # Cria um finding no Security Hub
        try:
            response = securityhub_client.batch_import_findings(
                Findings=[
                    {
                        'SchemaVersion': '2018-10-08',
                        'Id': f'{domain_id}/has-vpc-test',
                        'ProductArn': f'arn:aws:securityhub:{securityhub_client.meta.region_name}:{event["account"]}:product/{event["account"]}/default',
                        'GeneratorId': 'sagemaker-domain-check',
                        'AwsAccountId': event['account'],
                        'Types': [
                            'Software and Configuration Checks/AWS Security Best Practices'
                        ],
                        'FirstObservedAt': datetime.utcnow().isoformat() + 'Z',
                        'CreatedAt': datetime.utcnow().isoformat() + 'Z',
                        'UpdatedAt': datetime.utcnow().isoformat() + 'Z',
                        'Severity': {
                            'Label': 'MEDIUM'
                        },
                        'Title': 'SageMaker Domain with VPC (Testing)',
                        'Description': f'This is a test finding to confirm functionality when a SageMaker Domain {domain_id} has a VPC associated.',
                        'Resources': [
                            {
                                'Type': 'AwsSagemakerDomain',
                                'Id': domain_arn,
                                'Partition': 'aws',
                                'Region': securityhub_client.meta.region_name,
                                'Details': {
                                    'AwsSagemakerDomain': {
                                        'DomainId': domain_id
                                    }
                                }
                            }
                        ],
                        'SourceUrl': f'https://console.aws.amazon.com/sagemaker/home?region={securityhub_client.meta.region_name}#/domains/{domain_id}/details',
                        'ProductFields': {
                            'Product Name': 'Custom SageMaker VPC Check'
                        }
                    }
                ]
            )

            print(f"Finding enviado para o Security Hub: {response}")
        except Exception as e:
            print(f"Erro ao enviar finding para o Security Hub: {e}")

    else:
        print(f"Domain {domain_id} não tem VPC associado. Nenhuma ação será realizada para o teste.")

    return {
        'statusCode': 200,
        'body': f"Verificação concluída para o domínio {domain_id}."
    }
